doctype html
html(lang="en")
    include ./mixins/mixins.pug

    head 
        include ./include/head.pug

    body
        main
            h1 Scribble App Learn React
            section.section__wrapper(class="animate__animated animate__fadeInDown")
                .accordion--title
                    h2 Create an element using Javascript Vanilla
                    span.fa.fa-caret-down
                .accordion--content
                    +display({
                        "id":"display1",
                        "html": true,
                        "css": false,
                        "js": true,
                        "height":"300px",
                        "htmlfile":"code1"
                    })
                    .result__container--outer 
                        h3 Result
                        .result__container--outer-render


            section.section__wrapper(class="animate__animated animate__fadeInDown animate__delay-1s")
                .accordion--title
                    h2 Create an element using React
                    span.fa.fa-caret-down
                .accordion--content
                    +display({
                        "id":"display2",
                        "html": true,
                        "css": false,
                        "js": true,
                        "height":"300px",
                        "htmlfile":"code2"
                    })
                    .result__container--outer 
                        h3 Result
                        .result__container--outer-render

            section.section__wrapper(class="animate__animated animate__fadeIn animate__delay-2s")
                h2 3 rules of using JSX for creating element in React
                ol 
                    li 
                        p Only return 1 element (if you want to create multiple element you should use pair enclosing ) for example :
                        +display({
                            "id":"display3",
                            "html": true,
                            "css": true,
                            "js": true,
                            "height":"700px",
                            "codeid":"root2",
                            "htmlfile":"code3"
                        })

                        .result__container--outer 
                            h3 Result
                            .result__container--outer-render
                    li 
                        p 
                          | Always close all element tag, if you forget to close element tag it will give an error 
                          span.red "Unterminated JSX contents"
                    li 
                        p 
                          | Use camelCase for attribute element for example :
                          br
                          span.example Instead using #[strong class] attribute in HTML, in JSX we are using #[strong className] 
                          br
                          span.example Instead using #[strong onclick] attribute in HTML, in JSX we are using #[strong onClick]
        script(src="./script/include/jquery.min.js")
        script(src="https://unpkg.com/react@18/umd/react.development.js" defer)
        script(src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" defer)
        script(src="https://unpkg.com/@babel/standalone/babel.min.js" defer)              

    include ./include/script.pug
